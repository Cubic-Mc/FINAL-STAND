require("Scripts.main")

function init(self)
	fighter_timer = 0
	frigate_timer = 0
	game_timer = 0
	math.randomseed(os.time())
	spawner = true
end

function update(self, dt)
	if spawner == true then 
		game_timer = game_timer + 1 * dt
		frigate_timer = frigate_timer + 1 * dt
		fighter_timer = fighter_timer + 1 * dt
		if game_timer > 0 then
			if fighter_timer >= 2 then
				enemy = factory.create("#fighter")
				local enemyposition = go.get_position()
				local to = enemyposition.y - 1000
				go.animate(enemy, "position.y", go.PLAYBACK_ONCE_FORWARD, to, go.EASING_LINEAR, 6)
				fighter_timer = 0
			end
		end
		if game_timer > 30 then
			if frigate_timer >= 3 then
				frigate = factory.create("#frigate")
				local enemyposition = go.get_position()
				local to = enemyposition.y - 1000
				go.animate(frigate, "position.y", go.PLAYBACK_ONCE_FORWARD, to, go.EASING_LINEAR,10)
				frigate_timer = 0
			end
		end
		local currentpos = go.get_position()
		currentpos.x = math.random(20,940)
		go.set_position(currentpos)
	end
end

function on_message(self, message_id, message, sender)
	print(hash(message_id))
	if message_id == hash("stop") then
		spawner = false
		go.delete(enemy)
		go.delete(frigate)
	end
	--[[if message_id == hash("5_damage") then
		msg.post(nil,frigate, "5_damage") 
	end]]
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end